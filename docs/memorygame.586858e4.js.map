{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-21d3507590d8d47f.js","node_modules/@parcel/runtime-js/lib/runtime-7d5afad3d233c1e7.js","node_modules/@parcel/runtime-js/lib/runtime-3a2b8bfed35617a4.js","node_modules/@parcel/runtime-js/lib/runtime-059c8db61461c67a.js","node_modules/@parcel/runtime-js/lib/runtime-c11eda22cfe4912e.js","node_modules/@parcel/runtime-js/lib/runtime-e5cf7b0ff4c43caf.js","node_modules/@parcel/runtime-js/lib/runtime-953e9fb65f57f7c1.js","node_modules/@parcel/runtime-js/lib/runtime-8a09bee9a8e87219.js","node_modules/@parcel/runtime-js/lib/runtime-97975e2376f6c1f7.js","js/memoryGame/global.js","js/memoryGame/Helper.js","js/memoryGame/Game.js","node_modules/@swc/helpers/src/_define_property.js","js/memoryGame/main.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"ch5Ah\\\":\\\"memorygame.586858e4.js\\\",\\\"7qPPV\\\":\\\"bananas.8df7525f.png\\\",\\\"8vGkd\\\":\\\"cherries.bdef524d.png\\\",\\\"lgWRN\\\":\\\"popcorn.3b0c0b8f.png\\\",\\\"am3Ev\\\":\\\"bmw.db8c4530.png\\\",\\\"j3xO5\\\":\\\"hamburger.7cac6549.png\\\",\\\"4w28f\\\":\\\"cheese.8645506e.png\\\",\\\"8zhu8\\\":\\\"toothbrush.69a890d1.png\\\",\\\"dtwUf\\\":\\\"fox.8efb4d41.png\\\"}\"));","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"7qPPV\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8vGkd\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"lgWRN\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"am3Ev\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"j3xO5\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"4w28f\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8zhu8\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"dtwUf\")).toString();","import bananas from \"../../assets/bananas.png\";\r\nimport cherries from \"../../assets/cherries.png\";\r\nimport popcorn from \"../../assets/popcorn.png\";\r\nimport bmw from \"../../assets/bmw.png\";\r\nimport hamburger from \"../../assets/hamburger.png\";\r\nimport cheese from \"../../assets/cheese.png\";\r\nimport toothbrush from \"../../assets/toothbrush.png\";\r\nimport fox from \"../../assets/fox.png\";\r\n\r\nexport const IMAGES = [\r\n  bananas,\r\n  cherries,\r\n  popcorn,\r\n  bmw,\r\n  hamburger,\r\n  cheese,\r\n  toothbrush,\r\n  fox,\r\n];\r\n\r\nexport const DIFFICULTY_BOX = {\r\n  easy: 4,\r\n  medium: 8,\r\n  hard: 16,\r\n};\r\nexport const ROOT = document.body.querySelector(\".container__game\");\r\n","import { IMAGES } from \"./global\";\r\n\r\nconst createCard = (number, src) => {\r\n  const div = document.createElement(\"div\");\r\n  div.classList.add(\"container__game__box\");\r\n  div.classList.add(`container__game__box--${number}`);\r\n  div.setAttribute(\"data-id\", number);\r\n\r\n  const image = document.createElement(\"img\");\r\n  image.classList.add(\"container__game__box__image\");\r\n  image.src = src;\r\n  div.appendChild(image);\r\n  return div;\r\n};\r\n\r\nexport const assignImage = (imagesNumber, pairs) => {\r\n  const images = [];\r\n  while (images.length < pairs.length) {\r\n    const random = Math.floor(Math.random() * imagesNumber);\r\n    if (images.indexOf(random) === -1) images.push(random);\r\n  }\r\n  const fields = [];\r\n  for (let i = 0; i < pairs.length; i++) {\r\n    const boxOneNumber = pairs[i][0];\r\n    const boxTwoNumber = pairs[i][1];\r\n\r\n    const imageSrc = IMAGES[images[i]];\r\n\r\n    const div1 = createCard(boxOneNumber, imageSrc);\r\n    const div2 = createCard(boxTwoNumber, imageSrc);\r\n\r\n    fields.push(div1);\r\n    fields.push(div2);\r\n  }\r\n  return fields;\r\n};\r\n\r\nexport const randomNumber = (to) => {\r\n  const arr = [];\r\n  while (arr.length < to) {\r\n    const random = Math.floor(Math.random() * to) + 1;\r\n    if (arr.indexOf(random) === -1) arr.push(random);\r\n  }\r\n  return arr;\r\n};\r\n\r\nexport const pairNumbers = (numbers) => {\r\n  const pairs = [];\r\n  for (let i = 0; i < numbers.length; i += 2) {\r\n    const tuple = [numbers[i], numbers[i + 1]];\r\n    pairs.push(tuple);\r\n  }\r\n  return pairs;\r\n};\r\n\r\nexport const sleep = (ms) => {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n};\r\n","import { assignImage, randomNumber, pairNumbers, sleep } from \"./Helper\";\r\nimport { IMAGES, ROOT, DIFFICULTY_BOX } from \"./global\";\r\nclass Game {\r\n  state = {\r\n    pairs: [],\r\n    peekedCards: [],\r\n    difficulty: \"easy\",\r\n    pairsFounded: 0,\r\n    activity: \"pending\",\r\n  };\r\n\r\n  startGame() {\r\n    this.generatePairs();\r\n    this.createBoard();\r\n    this.peekCards();\r\n    this.startListening();\r\n  }\r\n\r\n  restartGame() {\r\n    document\r\n      .querySelectorAll(\".container__game__box\")\r\n      .forEach((item) => item.remove());\r\n    this.resetState();\r\n    this.startGame();\r\n  }\r\n\r\n  resetState() {\r\n    this.state = {\r\n      ...this.state,\r\n      pairsFounded: 0,\r\n      pairs: [],\r\n      peekedCards: [],\r\n    };\r\n  }\r\n\r\n  generatePairs() {\r\n    const boxNumber = DIFFICULTY_BOX[this.state.difficulty];\r\n\r\n    const randomNumbers = randomNumber(boxNumber);\r\n    const pairs = pairNumbers(randomNumbers);\r\n\r\n    this.state.pairs = pairs;\r\n  }\r\n\r\n  createBoard() {\r\n    const imagesNumber = IMAGES.length;\r\n    const fields = assignImage(imagesNumber, this.state.pairs);\r\n    fields.forEach((item) => ROOT.appendChild(item));\r\n  }\r\n\r\n  peekCards() {\r\n    this.state.activity = \"peek\";\r\n    const boxes = document.body.querySelectorAll(\".container__game__box\");\r\n    boxes.forEach((item) => {\r\n      item.setAttribute(\"data-active\", true);\r\n    });\r\n\r\n    setTimeout(() => {\r\n      boxes.forEach((item) => {\r\n        item.removeAttribute(\"data-active\");\r\n        this.state.activity = \"game\";\r\n      });\r\n    }, 2500);\r\n  }\r\n\r\n  startListening() {\r\n    const boxes = document.body.querySelectorAll(\".container__game__box\");\r\n    boxes.forEach((item) => {\r\n      item.addEventListener(\"click\", this.peekCard.bind(this));\r\n    });\r\n  }\r\n\r\n  peekCard(el) {\r\n    if (this.state.activity === \"peek\") return;\r\n    this.state.activity = \"peek\";\r\n    this.state.peekedCards.push(el.target.getAttribute(\"data-id\"));\r\n    el.target.setAttribute(\"data-active\", true);\r\n    this.checkPair();\r\n  }\r\n\r\n  changeDifficulty(difficulty) {\r\n    this.state.difficulty = difficulty;\r\n    this.restartGame();\r\n  }\r\n\r\n  async checkPair() {\r\n    const isTwoCardVisible = this.state.peekedCards.length < 2;\r\n    if (isTwoCardVisible) {\r\n      this.state.activity = \"game\";\r\n      return;\r\n    }\r\n\r\n    const peekedCard = this.state.peekedCards;\r\n    const pair = this.state.pairs.find((item) => {\r\n      return (\r\n        item[0] == this.state.peekedCards[0] ||\r\n        item[1] == this.state.peekedCards[0]\r\n      );\r\n    });\r\n    const isMatch = pair.sort().toString() === peekedCard.sort().toString();\r\n\r\n    await sleep(1000);\r\n    if (!isMatch) {\r\n      this.hideRevealedCards();\r\n    } else {\r\n      this.state.pairsFounded++;\r\n      this.flipRevealedCards();\r\n    }\r\n    this.state.peekedCards = [];\r\n    this.checkForWinner();\r\n\r\n    this.state.activity = \"game\";\r\n  }\r\n\r\n  flipRevealedCards() {\r\n    const boxes = document.body.querySelectorAll(\".container__game__box\");\r\n    boxes.forEach((item) => {\r\n      const id = item.getAttribute(\"data-id\");\r\n      if (this.state.peekedCards.includes(id))\r\n        item.setAttribute(\"data-invisible\", true);\r\n    });\r\n  }\r\n\r\n  hideRevealedCards() {\r\n    const boxes = document.body.querySelectorAll(\".container__game__box\");\r\n    boxes.forEach((item) => {\r\n      const id = item.getAttribute(\"data-id\");\r\n      if (this.state.peekedCards.includes(id))\r\n        item.removeAttribute(\"data-active\");\r\n    });\r\n  }\r\n\r\n  checkForWinner() {\r\n    if (DIFFICULTY_BOX[this.state.difficulty] === this.state.pairsFounded * 2) {\r\n      alert(\"wygrałes!\");\r\n      this.restartGame();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","import Game from \"./Game\";\r\n\r\nconst onLvlButtonClick = (item) => {\r\n  const difficulty = item.target.getAttribute(\"data-type\");\r\n  const buttons = document.querySelectorAll(\".container__difficulty__type\");\r\n  buttons.forEach((item) => {\r\n    if (item.hasAttribute(\"data-active\")) item.removeAttribute(\"data-active\");\r\n  });\r\n  document\r\n    .querySelector(`.container__difficulty__type--${difficulty}`)\r\n    .setAttribute(\"data-active\", true);\r\n\r\n  game.changeDifficulty(difficulty);\r\n};\r\n\r\nconst lvlButtons = document.querySelectorAll(\".container__difficulty__type\");\r\nlvlButtons.forEach((item) => {\r\n  item.addEventListener(\"click\", onLvlButtonClick);\r\n});\r\n\r\nconst game = new Game();\r\ngame.startGame();\r\n"],"names":["$1bd20825deb890c4$export$357eb1b4f03c1402","$1bd20825deb890c4$export$40339995e8a21591","$1bd20825deb890c4$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$120d87f16e1ae3f9$exports","URL","resolve","import","meta","url","toString","$48e7630e622e7636$exports","$1ae132f0d7cf3d46$exports","$144d8836ed6c058a$exports","$ff753f165c355cb0$exports","$32624bf15389b794$exports","$9c22fd5b5ea88a7f$exports","$ca54060dfc0ff361$exports","$edbed435c91e1c90$export$19f70b2b5b0318b5","$parcel$interopDefault","$edbed435c91e1c90$export$30dfde9a5a1ccc57","easy","medium","hard","$edbed435c91e1c90$export$d8c31b9c4d970e6f","document","body","querySelector","$6fd86980363417de$var$createCard","number","src","div","createElement","classList","add","setAttribute","image","appendChild","$36398f58aca4d224$export$9099ad97b570f7c","startGame","generatePairs","createBoard","peekCards","startListening","restartGame","querySelectorAll","forEach","item","remove","resetState","state","pairsFounded","peekedCards","numbers","tuple","push","$6fd86980363417de$export$11f743a8e3c79cdf","to","arr","random","Math","floor","indexOf","$6fd86980363417de$export$a296d728ef693d57","this","difficulty","fields","imagesNumber","images","boxOneNumber","boxTwoNumber","imageSrc","div1","div2","$6fd86980363417de$export$8b7bf0e53f1f1c50","activity","boxes","setTimeout","removeAttribute","addEventListener","peekCard","bind","el","target","getAttribute","checkPair","changeDifficulty","peekedCard","isMatch","find","sort","ms","Promise","flipRevealedCards","hideRevealedCards","checkForWinner","includes","alert","obj","key","value","defineProperty","enumerable","configurable","writable","$901721dcb3169d1b$var$onLvlButtonClick","item1","hasAttribute","$901721dcb3169d1b$var$game"],"version":3,"file":"memorygame.586858e4.js.map"}